<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project>
<!--=========================================================================-->
<!--                                                                         -->
<!--  PROJECT:  buildGapps                                                   -->
<!--            Slimroms (www.slimroms.net)                                  -->
<!--                                                                         -->
<!--  FILE:     build.xml                                                    -->
<!--                                                                         -->
<!--  DESCRIPTION:                                                           -->
<!--                                                                         -->
<!--    builds the gapps                                                     -->
<!--                                                                         -->
<!--  AUTHORS:                                                               -->
<!--                                                                         -->
<!--    tortureduck: Manfred Hofbauer                                        -->
<!--    dankoman   : Daniel Koman                                            -->
<!--                                                                         -->
<!--  Subversion Tags                                                        -->
<!--                                                                         -->
<!--    $Author$                                                  -->
<!--    $LastChangedDate$     -->
<!--    $LastChangedRevision$                                          -->
<!--    $LastChangedBy$                                           -->
<!--    $Id$                -->
<!--=========================================================================-->
<project name="buildGapps"
         default="buildAll"
         basedir=".">
  <property file="build.properties"/>
  <description>
    This file list used by ant to build the Slim Gapps project
  </description>

  <!--=======================================================================-->
  <!-- some variables                                                        -->
  <!--=======================================================================-->
  <property name="app.name"                     value="buildGapps"/>
  <property name="app.dir"                      value="${basedir}"/>
  <property name="work.dir"                     value="${app.dir}/work"/>
  <property name="build.dir"                    value="${app.dir}/build"/>
  <property name="structure.dir"                value="${app.dir}/structure"/>
  <property name="sign.jar"                     value="${app.dir}/tools/signapk.jar"/>
  <property name="sign.pem"                     value="${app.dir}/tools/testkey.x509.pem"/>
  <property name="sign.pk8"                     value="${app.dir}/tools/testkey.pk8"/>
  
  <tstamp>  
    <format property="build.today" pattern="yyyyMMdd" />
  </tstamp>  
    
  <!--=======================================================================-->
  <!-- complete build                                                        -->
  <!--=======================================================================-->
  <target name="buildAll"
        depends="cleanupBefore,initit,buildMini,buildNormal,buildFull,cleanupAfter"
          description="execute complete build">
  </target>

  <!--=======================================================================-->
  <!-- mini                                                                  -->
  <!--=======================================================================-->
  <target name="buildMini"
          description="execute mini gapps build">
    <!-- preparations -->
    <property environment="env"/>
    <property name="file.name.mini" value="${build.dir}/Slim_mini_gapps.BETA.${PRODUCT_VERSION_MAJOR}.${PRODUCT_VERSION_MINOR}.${PRODUCT_VERSION_MAINTENANCE}-${build.today}.zip"/>
    <delete dir="${work.dir}"/>
    <propertyfile file="${build.dir}/gapps.filenames">
      <entry  key="minifilename" value="${file.name.mini}"/>
    </propertyfile>
    <!-- copy files -->
    <copy todir="${work.dir}">
        <fileset dir="${structure.dir}">
          <exclude name="system/app/CalendarGoogle/**"/>
          <exclude name="system/app/Chrome/**"/>
          <exclude name="system/app/Drive/**"/>
          <exclude name="system/app/GenieWidget/**"/>
          <exclude name="system/app/GoogleHome/**"/>
          <exclude name="system/app/GoogleTTS/**"/>
          <exclude name="system/app/Keep/**"/>
          <exclude name="system/app/Keyboard/**"/>
          <exclude name="system/app/Maps/**"/>
          <exclude name="system/app/Messenger/**"/>
          <exclude name="system/app/Music2/**"/>
          <exclude name="system/app/PlusOne/**"/>
          <exclude name="system/app/Street/**"/>
          <exclude name="system/app/Translate/**"/>
          <exclude name="system/app/Wallet/**"/>
          <exclude name="system/app/YouTube/**"/>
          <exclude name="system/priv-app/Velvet/**"/>
          <exclude name="system/tts/**"/>
          <exclude name="system/usr/**"/>
          <exclude name="optional/face/**"/>
        </fileset>
    </copy>
    <copy file="${app.dir}/extras/mini/updater-script"  todir="${work.dir}/META-INF/com/google/android"/>

    <!-- generate backup script --> 
    <fileset id="item.file" dir="${work.dir}/system" includes="**/*.*" />
    <pathconvert refid="item.file" property="file.list.mini" pathsep="&#10;" dirsep="/">
        <map from="${work.dir}/system/" to=''/>
    </pathconvert>
    <copy file="${app.dir}/extras/80-gapps.sh" todir="${work.dir}/system/addon.d">
        <filterchain>
          <replaceregex pattern="@file.list@" replace="${file.list.mini}" flags="i"/>
        </filterchain>
    </copy>

    <!-- zip and sign it --> 
    <zip destfile="${build.dir}/unsigned.zip" basedir="${work.dir}"></zip>
    <echo message="Signing gapps"/>
      <java dir="${build.dir}" fork="true" failonerror="true" maxmemory="1536m" jar="${sign.jar}">
      <arg value="-w"/>
      <arg value="${sign.pem}"/>
      <arg value="${sign.pk8}"/>
      <arg value="${build.dir}/unsigned.zip"/>
      <arg value="${file.name.mini}"/>
    </java>

  </target>

  <!--=======================================================================-->
  <!-- normal                                                                -->
  <!--=======================================================================-->
  <target name="buildNormal"
          description="execute normal gapps build">
    <!-- preparations -->
    <property environment="env"/>
    <property name="file.name.normal" value="${build.dir}/Slim_normal_gapps.BETA.${PRODUCT_VERSION_MAJOR}.${PRODUCT_VERSION_MINOR}.${PRODUCT_VERSION_MAINTENANCE}-${build.today}.zip"/>
    <delete dir="${work.dir}"/>
    <propertyfile file="${build.dir}/gapps.filenames">
      <entry  key="normalfilename" value="${file.name.normal}"/>
    </propertyfile>
    <!-- copy files -->
    <copy todir="${work.dir}">
      <fileset dir="${structure.dir}">
          <exclude name="system/app/CalendarGoogle/**"/>
          <exclude name="system/app/Chrome/**"/>
          <exclude name="system/app/Drive/**"/>
          <exclude name="system/app/Keep/**"/>
          <exclude name="system/app/Maps/**"/>
          <exclude name="system/app/Messenger/**"/>
          <exclude name="system/app/PlusOne/**"/>
          <exclude name="system/app/Street/**"/>
          <exclude name="system/app/Translate/**"/>
          <exclude name="system/app/Wallet/**"/>
      </fileset>
    </copy>
    <copy file="${app.dir}/extras/normal/updater-script"  todir="${work.dir}/META-INF/com/google/android"/>

    <!-- generate backup script --> 
    <fileset id="item.file" dir="${work.dir}/system" includes="**/*.*" />
    <pathconvert refid="item.file" property="file.list.normal" pathsep="&#10;" dirsep="/">
        <map from="${work.dir}/system/" to=''/>
    </pathconvert>
    <copy file="${app.dir}/extras/80-gapps.sh" todir="${work.dir}/system/addon.d">
        <filterchain>
          <replaceregex pattern="@file.list@" replace="${file.list.normal}" flags="i"/>
        </filterchain>
    </copy>

    <!-- zip and sign it -->
    <zip destfile="${build.dir}/unsigned.zip" basedir="${work.dir}"></zip>
    <echo message="Signing gapps"/>
    <java dir="${build.dir}" fork="true" failonerror="true" maxmemory="1536m" jar="${sign.jar}">
      <arg value="-w"/>
      <arg value="${sign.pem}"/>
      <arg value="${sign.pk8}"/>
      <arg value="${build.dir}/unsigned.zip"/>
      <arg value="${file.name.normal}"/>
    </java>
  </target>
  
  <!--=======================================================================-->
  <!-- full                                                               -->
  <!--=======================================================================-->
  <target name="buildFull"
          description="execute full gapps build">
    <!-- preparations -->
    <property environment="env"/>
    <property name="file.name.full" value="${build.dir}/Slim_full_gapps.BETA.${PRODUCT_VERSION_MAJOR}.${PRODUCT_VERSION_MINOR}.${PRODUCT_VERSION_MAINTENANCE}-${build.today}.zip"/>
    <delete dir="${work.dir}"/>
    <propertyfile file="${build.dir}/gapps.filenames">
      <entry  key="fullfilename" value="${file.name.full}"/>
    </propertyfile>
    <!-- copy files -->
    <copy todir="${work.dir}"><fileset dir="${structure.dir}"/></copy>
    <copy file="${app.dir}/extras/full/updater-script"  todir="${work.dir}/META-INF/com/google/android"/>

    <!-- generate backup script --> 
    <fileset id="item.file" dir="${work.dir}/system" includes="**/*.*" />
    <pathconvert refid="item.file" property="file.list.full" pathsep="&#10;" dirsep="/">
        <map from="${work.dir}/system/" to=''/>
    </pathconvert>
    <copy file="${app.dir}/extras/80-gapps.sh" todir="${work.dir}/system/addon.d">
        <filterchain>
          <replaceregex pattern="@file.list@" replace="${file.list.full}" flags="i"/>
        </filterchain>
    </copy>

    <!-- zip and sign it -->
    <zip destfile="${build.dir}/unsigned.zip" basedir="${work.dir}"></zip>
    <echo message="Signing gapps"/>
    <java dir="${build.dir}" fork="true" failonerror="true" maxmemory="1536m" jar="${sign.jar}">
      <arg value="-w"/>
      <arg value="${sign.pem}"/>
      <arg value="${sign.pk8}"/>
      <arg value="${build.dir}/unsigned.zip"/>
      <arg value="${file.name.full}"/>
    </java>
  </target>

  <!--=======================================================================-->
  <!-- cleanupBefore new build                                               -->
  <!--=======================================================================-->
  <target name="cleanupBefore"
      description="delete old directories">
      <delete dir="${build.dir}"/>
      <delete dir="${work.dir}"/>
  </target>

  <!--=======================================================================-->
  <!-- cleanupAfter build is done                                            -->
  <!--=======================================================================-->
  <target name="cleanupAfter"
      description="delete unnecessary build files">
      <echo message="Cleaning up"/>
      <delete file="${build.dir}/unsigned.zip"/>
      <delete file="${build.dir}/gapps.filenames"/>
  </target>

  <!--=======================================================================-->
  <!-- initiating build                                                      -->
  <!--=======================================================================-->
  <target name ="initit"
      description="initiating-steps">
      <mkdir dir="${build.dir}"/>
      <mkdir dir="${work.dir}"/>
  </target>

  <!--=======================================================================-->
  <!-- test build                                                            -->
  <!--=======================================================================-->
  <target name ="testit"
      description="testtest">
      <echo message="${x.dir}"/>
      <property name="x.dir" value="test9899"/>
      <echo message="${x.dir}"/>
  </target>
    
    
</project>
