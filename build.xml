<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project>
<!--=========================================================================-->
<!--                                                                         -->
<!--  PROJECT:  buildGapps                                                   -->
<!--            Slimroms (www.slimroms.net)                                  -->
<!--                                                                         -->
<!--  FILE:     build.xml                                                    -->
<!--                                                                         -->
<!--  DESCRIPTION:                                                           -->
<!--                                                                         -->
<!--    builds the gapps                                                     -->
<!--                                                                         -->
<!--  AUTHORS:                                                               -->
<!--                                                                         -->
<!--    tortureduck: Manfred Hofbauer                                        -->
<!--    dankoman   : Daniel Koman                                            -->
<!--    victorlapin: Victor Lapin                                            -->
<!--    raulx222   : Raul Petru                                              -->
<!--    uzen       : Dmitry Popov                                            -->
<!--    mohit310   : Mohit Keswani                                           -->
<!--                                                                         -->
<!--=========================================================================-->
<project name="buildGapps"
        default="buildAll"
        basedir=".">
    <property file="build.properties"/>
    <description>
        This file list is used by ant to build the Slim Gapps project
    </description>

    <!--=======================================================================-->
    <!-- some variables                                                        -->
    <!--=======================================================================-->
    <property name="app.name"                     value="buildGapps"/>
    <property name="app.dir"                      value="${basedir}"/>
    <property name="work.dir"                     value="${app.dir}/work"/>
    <property name="build.dir"                    value="${app.dir}/build"/>
    <property name="structure.dir"                value="${app.dir}/structure"/>
    <property name="slimapk.jar"                  value="${app.dir}/tools/slimapk.jar"/>
    <property name="sign.jar"                     value="${app.dir}/tools/signapk.jar"/>
    <property name="sign.pem"                     value="${app.dir}/tools/testkey.x509.pem"/>
    <property name="sign.pk8"                     value="${app.dir}/tools/testkey.pk8"/>
    <property name="extra.dir"                    value="${app.dir}/extras"/>
    <property name="originalapk.dir"              value="${app.dir}/original_apk"/>
    <!-- <property name="pattern.apk"                value="\.([^\.]+)(.?)\-"/>-->
    <tstamp>  
        <format property="build.today" pattern="yyyyMMdd"/>
    </tstamp>  

    <!--=======================================================================-->
    <!-- complete build                                                        -->
    <!--=======================================================================-->
        <target name="buildAll"
            depends="cleanupBefore,initit,SlimApk,generateCleanUpList,buildZero,buildMini,cleanupAfter"
            description="execute complete build"/>


    <!--=======================================================================-->
    <!-- zero                                                                  -->
    <!--=======================================================================-->
    <target name="buildZero"
            description="execute zero gapps build">
        <!-- preparations -->
        <property environment="env"/>
        <property name="file.name.zero" value="${build.dir}/Slim_zero_gapps.BETA.${PRODUCT_VERSION_MAJOR}.${PRODUCT_VERSION_MINOR}.${PRODUCT_VERSION_MAINTENANCE}-${build.today}.zip"/>
        <delete dir="${work.dir}"/>
        <propertyfile file="${build.dir}/gapps.filenames">
            <entry key="zerofilename" value="${file.name.zero}"/>
        </propertyfile>
        <!-- copy files -->
        <copy todir="${work.dir}">
            <fileset dir="${structure.dir}">
                <exclude name="system/app/ConfigUpdater/**"/>
                <exclude name="system/app/ExchangeServices/**"/>
                <exclude name="system/priv-app/talkback/**"/>
                <exclude name="system/tts/**"/>
                <exclude name="system/vendor/**"/>
                <exclude name="dynamic/FaceLock/**"/>
                <exclude name="dynamic/Velvet/**"/>
                <exclude name="dynamic.sh"/>
            </fileset>
        </copy>
        <copy file="${app.dir}/extras/updater-script" todir="${work.dir}/META-INF/com/google/android">
            <filterchain>
                <replaceregex pattern="@package@" replace="zero" flags="i"/>
                <replaceregex pattern="@cleanup.list@" replace="${cleanup.list}" flags="i"/>
            </filterchain>
        </copy>
        <copy file="${app.dir}/structure/dynamic.sh" todir="${work.dir}">
            <filterchain>
                <linecontains negate="true">
                    <contains value="#mini"/>
                </linecontains>
            </filterchain>
        </copy>

        <!-- generate backup script --> 
        <fileset id="item.file" dir="${work.dir}/system" includes="**/*"/>
        <pathconvert refid="item.file" property="file.list.zero" pathsep="&#10;" dirsep="/">
            <map from="${work.dir}/system/" to=''/>
        </pathconvert>
        <copy file="${app.dir}/extras/80-gapps.sh" todir="${work.dir}/system/addon.d">
            <filterchain>
                <replaceregex pattern="@file.list@" replace="${file.list.zero}" flags="i"/>
            </filterchain>
        </copy>

        <!-- fill in g.prop values -->
        <length property="length.zero" mode="all">
            <fileset dir="${work.dir}"/>
        </length>
        
        <propertyfile file="${work.dir}/system/etc/g.prop">
            <entry key="ro.addon.type" value="gapps"/>
            <entry key="ro.addon.platform" value="lp"/>
            <entry key="ro.addon.version" value="slim.zero.${build.today}"/>
            <entry key="ro.addon.minimumversion" value="${PRODUCT_VERSION_MAJOR}"/>
            <entry key="ro.addon.size" value="${length.zero}"/>
        </propertyfile>

        <!-- copy space.sh and fill in values -->
        <copy file="${app.dir}/extras/space.sh" todir="${work.dir}">
            <filterchain>
                <replaceregex pattern="@version@" replace="${PRODUCT_VERSION_MAJOR}" flags="i"/>
                <replaceregex pattern="@space_needed@" replace="${length.zero}" flags="i"/>
            </filterchain>
        </copy>

        <!-- zip and sign it --> 
        <antcall target="ZipAndSigning">
            <param name="hfile.name" value="${file.name.zero}"/>
        </antcall>

    </target>

    <!--=======================================================================-->
    <!-- mini                                                                  -->
    <!--=======================================================================-->
    <target name="buildMini"
            description="execute mini gapps build">
        <!-- preparations -->
        <property environment="env"/>
        <property name="file.name.mini" value="${build.dir}/Slim_mini_gapps.BETA.${PRODUCT_VERSION_MAJOR}.${PRODUCT_VERSION_MINOR}.${PRODUCT_VERSION_MAINTENANCE}-${build.today}.zip"/>
        <delete dir="${work.dir}"/>
        <propertyfile file="${build.dir}/gapps.filenames">
            <entry key="minifilename" value="${file.name.mini}"/>
        </propertyfile>
        <!-- copy files -->
        <copy todir="${work.dir}">
            <fileset dir="${structure.dir}"/>
        </copy>
        <copy file="${app.dir}/extras/updater-script" todir="${work.dir}/META-INF/com/google/android">
            <filterchain>
                <replaceregex pattern="@package@" replace="mini" flags="i"/>
                <replaceregex pattern="@cleanup.list@" replace="${cleanup.list}" flags="i"/>
            </filterchain>
        </copy>

        <!-- generate backup script --> 
        <fileset id="item.file" dir="${work.dir}/system" includes="**/*"/>
        <pathconvert refid="item.file" property="file.list.mini" pathsep="&#10;" dirsep="/">
            <map from="${work.dir}/system/" to=''/>
        </pathconvert>
        <copy file="${app.dir}/extras/80-gapps.sh" todir="${work.dir}/system/addon.d">
            <filterchain>
                <replaceregex pattern="@file.list@" replace="${file.list.mini}" flags="i"/>
            </filterchain>
        </copy>

        <!-- fill in g.prop values -->
        <length property="length.mini" mode="all">
            <fileset dir="${work.dir}"/>
        </length>
        
        <propertyfile file="${work.dir}/system/etc/g.prop">
            <entry key="ro.addon.type" value="gapps"/>
            <entry key="ro.addon.platform" value="lp"/>
            <entry key="ro.addon.version" value="slim.mini.${build.today}"/>
            <entry key="ro.addon.minimumversion" value="${PRODUCT_VERSION_MAJOR}"/>
            <entry key="ro.addon.size" value="${length.mini}"/>
        </propertyfile>

        <!-- copy space.sh and fill in values -->
        <copy file="${app.dir}/extras/space.sh" todir="${work.dir}">
            <filterchain>
                <replaceregex pattern="@version@" replace="${PRODUCT_VERSION_MAJOR}" flags="i"/>
                <replaceregex pattern="@space_needed@" replace="${length.mini}" flags="i"/>
            </filterchain>
        </copy>

        <!-- zip and sign it -->
        <antcall target="ZipAndSigning">
            <param name="hfile.name" value="${file.name.mini}"/>
        </antcall>

    </target>
  
    <!--=======================================================================-->
    <!-- generate clean up list                                                -->
    <!--=======================================================================-->
    <target name="generateCleanUpList">
        <path id="cleanup.file">
            <fileset dir="${extra.dir}">
                <include name="*.sh"/>
            </fileset>
            <fileset dir="${structure.dir}/system"/>
            <fileset dir="${structure.dir}/optional/"/>
        </path>
        <pathconvert refid="cleanup.file" property="cleanup.list" pathsep="&quot;,&#10;&quot;" dirsep="/">
            <map from="${extra.dir}" to="/system/addon.d"/>
            <map from="${structure.dir}/system/" to="/system/"/>
            <map from="${structure.dir}/optional/common/" to="/system/"/>
            <map from="${structure.dir}/optional/face/" to="/system/"/>
            <map from="${structure.dir}/optional/hammerhead/" to="/system/"/>
            <map from="${structure.dir}/optional/manta/" to="/system/"/>
            <map from="${structure.dir}/optional/shamu/" to="/system/"/>
            <map from="${structure.dir}/optional/tuna/" to="/system/"/>
        </pathconvert>
    </target>

    <!--=======================================================================-->
    <!-- zip and sign it                                                       -->
    <!--=======================================================================-->
    <target name="ZipAndSigning">
        <zip destfile="${build.dir}/unsigned.zip" basedir="${work.dir}"/>
        <echo message="Signing gapps"/>
        <java dir="${build.dir}" fork="true" failonerror="true" maxmemory="1536m" jar="${sign.jar}">
            <arg value="-w"/>
            <arg value="${sign.pem}"/>
            <arg value="${sign.pk8}"/>
            <arg value="${build.dir}/unsigned.zip"/>
            <arg value="${hfile.name}"/>
        </java>
    </target>
    
    <!--=======================================================================-->
    <!-- slimapk                                                               -->
    <!--=======================================================================-->
    <target name="SlimApk">
        <java dir="${build.dir}" fork="true" failonerror="true" maxmemory="1536m" jar="${slimapk.jar}">
            <arg value="-k"/>
            <!--<arg value="-p"/>-->
            <!--<arg value="${pattern.apk}"/>-->
            <arg value="${originalapk.dir}/arm"/>
            <arg value="${structure.dir}/system/"/>
        </java>
    </target>
    
    <!--=======================================================================-->
    <!-- cleanupBefore new build                                               -->
    <!--=======================================================================-->
    <target name="cleanupBefore"
            description="delete old directories">
        <delete dir="${build.dir}"/>
        <delete dir="${work.dir}"/>
    </target>

    <!--=======================================================================-->
    <!-- cleanupAfter build is done                                            -->
    <!--=======================================================================-->
    <target name="cleanupAfter"
            description="delete unnecessary build files">
        <echo message="Cleaning up"/>
        <delete file="${build.dir}/unsigned.zip"/>
        <delete file="${build.dir}/gapps.filenames"/>
    </target>

    <!--=======================================================================-->
    <!-- initiating build                                                      -->
    <!--=======================================================================-->
    <target name ="initit"
            description="initiating-steps">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${work.dir}"/>
    </target>

    <!--=======================================================================-->
    <!-- test build                                                            -->
    <!--=======================================================================-->
    <target name ="testit"
            description="testtest">
        <echo message="${x.dir}"/>
        <property name="x.dir" value="test9899"/>
        <echo message="${x.dir}"/>
    </target>

</project>
